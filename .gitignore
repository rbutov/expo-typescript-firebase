.expo/
dist/
*.jks
*.p8
*.p12
*.key
*.mobileprovision
*.orig.*
web-build/

# Binaries for programs and plugins
*.exe
*.exe~
*.dll
*.so
*.dylib
./pigeon
Chart.lock
ci/helm/pigeon/charts/*

# Test binary, build with `go test -c`
*.test

# Output of the go coverage tool, specifically when used with LiteIDE
*.out

## From Vision - TODO: Clean up

## DATA
reportCache
Vision/web/cache/*
/reportCache
Vision/web/public/Envision-User-Guide.pptx
/dev_files
/autoQueries
autoQueries
*.tmp
*.xlsx
*.swo
*.py.swo
# Packages #
############
# it's better to unpack these files and commit the raw source
# git has its own built in compression methods
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip

# Logs and databases #
######################
*.log
*.sql
*.sqlite
*.dynamoschema

#virtual env and lib
virtualenviroment
env
lib

## LOGS
Vision/logs
logs
**/logs

## CONFIG/SECRETS
vision-config.yaml
Vision/web/secrets.py
systemFiles/ssl
#Vision/web/public/env.js
Vision/web/cypress.env.json

## SWAP FILES/MODULE CACHES
*/*.swp
*/*.pyc
*/*/*.swp
*/*/*.pyc
*.swp
*.pyc
*.bak
**/*.bak

## PCKGS
Vision/web/node_modules
*/node_modules
**/node_modules
.venv
awscli-bundle

# dependencies
/node_modules
/.pnp
.pnp.js

# testing
/coverage
/cypress/videos
/cypress/dowloads
/cypress/screenshots
cypress.env.json

# production
/build

# misc
.env.*
!.env.example
.npmrc
.eslintcache
/tmp

# logs
npm-debug.log*
yarn-debug.log*
yarn-error.log*

## ETC
**/npm-debug*
.DS_Store
.vscode/
.idea/
.run/

# apiDoc output
/Vision/web/docs

#cl tool
s3peep

*.lock
charts

docker/mysql_data/
docker/dynamodbdata/
